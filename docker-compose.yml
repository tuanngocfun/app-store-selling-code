version:  "3.9"  # Use a more recent version of the compose file format
services:
  api-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DB_HOST=database  # Use the service name "database" as the host name
      - DB_USER=postgres
      - DB_PASSWORD=123456789
      - DB_NAME=Risen
      - DB_PORT=5432
    # command: "npm run start_dev"
    ports:
      - "3000:5000" 
    depends_on:
      - database  # Make sure the database service starts before the api-backend service
    # volumes:
    #   - .:/app

  database:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456789
      - POSTGRES_DB=Risen
    volumes:
      - ./init_db:/docker-entrypoint-initdb.d
      # - ../db:/var/lib/postgresql/data
    ports:
      - "6789:5432" # HOST_PORT:CONTAINER_PORT, the container can communicate via container port, and the outsider can 
      # communicate via host port

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: my-frontend-image:latest
    ports:
      - "8080:80"


# version: '3.9'
# services:
#   api-backend:
#     extends:
#       file: backend/docker-compose.yml
#       service: api-backend
#   database:
#     extends:
#       file: backend/docker-compose.yml
#       service: database
#   frontend:
#     extends:
#       file: frontend/docker-compose.yml
#       service: frontend